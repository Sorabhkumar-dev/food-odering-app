// Generated by Dagger (https://dagger.dev).
package com.sorabh.grabfood.ui.viewmodel;

import com.sorabh.grabfood.domain.usecase.GetOderConfirmationUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CartViewModel_Factory implements Factory<CartViewModel> {
  private final Provider<GetOderConfirmationUseCase> getOderConfirmationUseCaseProvider;

  public CartViewModel_Factory(
      Provider<GetOderConfirmationUseCase> getOderConfirmationUseCaseProvider) {
    this.getOderConfirmationUseCaseProvider = getOderConfirmationUseCaseProvider;
  }

  @Override
  public CartViewModel get() {
    return newInstance(getOderConfirmationUseCaseProvider.get());
  }

  public static CartViewModel_Factory create(
      Provider<GetOderConfirmationUseCase> getOderConfirmationUseCaseProvider) {
    return new CartViewModel_Factory(getOderConfirmationUseCaseProvider);
  }

  public static CartViewModel newInstance(GetOderConfirmationUseCase getOderConfirmationUseCase) {
    return new CartViewModel(getOderConfirmationUseCase);
  }
}
