// Generated by view binder compiler. Do not edit!
package com.sorabh.grabfood.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.sorabh.grabfood.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOderHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final ErrorLayoutBinding errorLayout;

  @NonNull
  public final RecyclerView orderHistoryFragmentRecyclerView;

  @NonNull
  public final ShimmerFrameLayout shimmerLayout;

  private FragmentOderHistoryBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull ErrorLayoutBinding errorLayout,
      @NonNull RecyclerView orderHistoryFragmentRecyclerView,
      @NonNull ShimmerFrameLayout shimmerLayout) {
    this.rootView = rootView;
    this.errorLayout = errorLayout;
    this.orderHistoryFragmentRecyclerView = orderHistoryFragmentRecyclerView;
    this.shimmerLayout = shimmerLayout;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOderHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOderHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_oder_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOderHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.error_layout;
      View errorLayout = ViewBindings.findChildViewById(rootView, id);
      if (errorLayout == null) {
        break missingId;
      }
      ErrorLayoutBinding binding_errorLayout = ErrorLayoutBinding.bind(errorLayout);

      id = R.id.order_history_fragment_recyclerView;
      RecyclerView orderHistoryFragmentRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (orderHistoryFragmentRecyclerView == null) {
        break missingId;
      }

      id = R.id.shimmerLayout;
      ShimmerFrameLayout shimmerLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerLayout == null) {
        break missingId;
      }

      return new FragmentOderHistoryBinding((LinearLayoutCompat) rootView, binding_errorLayout,
          orderHistoryFragmentRecyclerView, shimmerLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
